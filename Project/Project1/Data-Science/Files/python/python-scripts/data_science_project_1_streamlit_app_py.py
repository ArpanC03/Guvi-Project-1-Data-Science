# -*- coding: utf-8 -*-
"""Data-Science_Project-1_Streamlit-App.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k9a5ybzIHdWJiIEIJFbzclDsPCgbLwkq
"""

# Install streamlit and dependencies
!pip install streamlit pandas plotly
!pip install pyngrok

!pip install streamlit pandas plotly pyngrok

import streamlit as st
import pandas as pd
import plotly.express as px

@st.cache_data
def load_data():
    df = pd.read_csv('india_aqi.csv')
    def aqi_category(aqi):
        if aqi <= 50: return 'Good'
        elif aqi <= 100: return 'Satisfactory'
        elif aqi <= 200: return 'Moderate'
        elif aqi <= 300: return 'Poor'
        elif aqi <= 400: return 'Very Poor'
        else: return 'Severe'
    if 'AQI_Category' not in df.columns:
        df['AQI_Category'] = df['AQI'].apply(aqi_category)
    return df

df = load_data()

st.title("Air Quality Index (AQI) Dashboard - Indian Cities")

# Scrollable data table with pagination
st.subheader("AQI Data Table")
rows_per_page = 10
total_rows = len(df)
pages = (total_rows // rows_per_page) + 1
page_number = st.number_input("Page Number", min_value=1, max_value=pages, value=1, step=1)
start_idx = (page_number - 1) * rows_per_page
end_idx = start_idx + rows_per_page
st.dataframe(df.iloc[start_idx:end_idx, :], height=300)

st.subheader("Dashboard Visualizations")

color_dict = {
    'Good': 'green',
    'Satisfactory': 'lightgreen',
    'Moderate': 'orange',
    'Poor': 'red',
    'Very Poor': 'purple',
    'Severe': 'black'
}

# KPIs
total_cities = df['City'].nunique()
avg_aqi = df['AQI'].mean()
worst_city = df.loc[df['AQI'].idxmax()]
cleanest_city = df.loc[df['AQI'].idxmin()]

col1, col2, col3 = st.columns(3)
col1.metric("Total Cities", total_cities)
col2.metric("Average AQI", f"{avg_aqi:.1f}")
col3.metric("Most Polluted City", f"{worst_city['City']} ({worst_city['AQI']})")
st.write(f"**Cleanest City:** {cleanest_city['City']} ({cleanest_city['AQI']})")

# Interactive AQI map
fig_map = px.scatter_mapbox(
    df, lat="Latitude", lon="Longitude", color="AQI_Category", size="AQI",
    hover_name="City", hover_data=["State", "AQI"],
    color_discrete_map=color_dict,
    mapbox_style="carto-positron",
    zoom=4,
    height=500
)
st.plotly_chart(fig_map, use_container_width=True)

# AQI histogram
fig_hist = px.histogram(
    df, x="AQI", nbins=30, color="AQI_Category", color_discrete_map=color_dict
)
st.plotly_chart(fig_hist, use_container_width=True)

# Top 10 most polluted cities bar
top10 = df.nlargest(10, "AQI")
fig_bar_top = px.bar(
    top10, x="City", y="AQI", color="AQI_Category", color_discrete_map=color_dict, title="Top 10 Most Polluted Cities"
)
st.plotly_chart(fig_bar_top, use_container_width=True)

# Top 10 cleanest cities bar
bot10 = df.nsmallest(10, "AQI")
fig_bar_bot = px.bar(
    bot10, x="City", y="AQI", color="AQI_Category", color_discrete_map=color_dict, title="Top 10 Cleanest Cities"
)
st.plotly_chart(fig_bar_bot, use_container_width=True)

# Cities by AQI Category pie chart
cat_counts = df["AQI_Category"].value_counts()
fig_pie = px.pie(
    names=cat_counts.index,
    values=cat_counts.values,
    color=cat_counts.index,
    color_discrete_map=color_dict,
    hole=0.3,
)
st.plotly_chart(fig_pie, use_container_width=True)

# # Save this as app.py or copy to a .py file in your environment

# import streamlit as st
# import pandas as pd
# import plotly.express as px

# # Load data once
# @st.cache_data
# def load_data():
#     df = pd.read_csv('india_aqi.csv')
#     # Define AQI category
#     def aqi_category(aqi):
#         if aqi <= 50: return 'Good'
#         elif aqi <= 100: return 'Satisfactory'
#         elif aqi <= 200: return 'Moderate'
#         elif aqi <= 300: return 'Poor'
#         elif aqi <= 400: return 'Very Poor'
#         else: return 'Severe'
#     if 'AQI_Category' not in df.columns:
#         df['AQI_Category'] = df['AQI'].apply(aqi_category)
#     return df

# df = load_data()

# st.title("Air Quality Index (AQI) Dashboard - Indian Cities")

# # --- Scrollable Data Table with Pagination ---
# st.subheader("AQI Data Table")

# # Number of rows to show at once
# rows_per_page = 10

# # Pagination controls
# total_rows = len(df)
# pages = (total_rows // rows_per_page) + 1
# page_number = st.number_input("Page Number", min_value=1, max_value=pages, value=1, step=1)

# start_idx = (page_number - 1) * rows_per_page
# end_idx = start_idx + rows_per_page

# # Display data table portion
# st.dataframe(df.iloc[start_idx:end_idx, :], height=300)  # fixed height, scrollbar appears if needed

# # --- Dashboard Visualizations below ---

# st.subheader("Dashboard Visualizations")

# color_dict = {
#     'Good': 'green',
#     'Satisfactory': 'lightgreen',
#     'Moderate': 'orange',
#     'Poor': 'red',
#     'Very Poor': 'purple',
#     'Severe': 'black'
# }

# # KPIs
# total_cities = df['City'].nunique()
# avg_aqi = df['AQI'].mean()
# worst_city = df.loc[df['AQI'].idxmax()]
# cleanest_city = df.loc[df['AQI'].idxmin()]

# col1, col2, col3 = st.columns(3)
# col1.metric("Total Cities", total_cities)
# col2.metric("Average AQI", f"{avg_aqi:.1f}")
# col3.metric("Most Polluted City", f"{worst_city['City']} ({worst_city['AQI']})")

# st.write(f"**Cleanest City:** {cleanest_city['City']} ({cleanest_city['AQI']})")

# # AQI Map
# st.subheader("AQI Map of Indian Cities")

# fig_map = px.scatter_mapbox(
#     df,
#     lat="Latitude", lon="Longitude",
#     color="AQI_Category",
#     size='AQI',
#     hover_name="City",
#     hover_data=["State", "AQI"],
#     color_discrete_map=color_dict,
#     mapbox_style="carto-positron",
#     zoom=4,
#     height=500,
#     title="AQI Map by Category"
# )
# st.plotly_chart(fig_map, use_container_width=True)

# # AQI Distribution Histogram
# st.subheader("AQI Distribution")

# fig_hist = px.histogram(df, x='AQI', nbins=30, color='AQI_Category', color_discrete_map=color_dict)
# st.plotly_chart(fig_hist, use_container_width=True)

# # Top 10 polluted and cleanest cities
# st.subheader("City Rankings by AQI")

# top10 = df.nlargest(10, 'AQI')
# bot10 = df.nsmallest(10, 'AQI')

# fig_bar = px.bar(top10, x='City', y='AQI', color='AQI_Category', color_discrete_map=color_dict, title='Top 10 Most Polluted Cities')
# st.plotly_chart(fig_bar, use_container_width=True)

# fig_bar2 = px.bar(bot10, x='City', y='AQI', color='AQI_Category', color_discrete_map=color_dict, title='Top 10 Cleanest Cities')
# st.plotly_chart(fig_bar2, use_container_width=True)

# # AQI Category distribution Pie Chart
# st.subheader("Cities by AQI Category")

# cat_counts = df['AQI_Category'].value_counts()
# fig_pie = px.pie(names=cat_counts.index, values=cat_counts.values, color=cat_counts.index, color_discrete_map=color_dict, hole=0.3)
# st.plotly_chart(fig_pie, use_container_width=True)

# import streamlit as st
# import pandas as pd
# import plotly.express as px

# # Load data once
# @st.cache_data
# def load_data():
#     df = pd.read_csv('india_aqi.csv')
#     def aqi_category(aqi):
#         if aqi <= 50: return 'Good'
#         elif aqi <= 100: return 'Satisfactory'
#         elif aqi <= 200: return 'Moderate'
#         elif aqi <= 300: return 'Poor'
#         elif aqi <= 400: return 'Very Poor'
#         else: return 'Severe'
#     if 'AQI_Category' not in df.columns:
#         df['AQI_Category'] = df['AQI'].apply(aqi_category)
#     return df

# df = load_data()

# st.title("Air Quality Index (AQI) Dashboard - Indian Cities")

# # --- Scrollable Data Table with Pagination ---
# st.subheader("AQI Data Table")
# rows_per_page = 10
# total_rows = len(df)
# pages = (total_rows // rows_per_page) + 1
# page_number = st.number_input("Page Number", min_value=1, max_value=pages, value=1, step=1)
# start_idx = (page_number - 1) * rows_per_page
# end_idx = start_idx + rows_per_page
# st.dataframe(df.iloc[start_idx:end_idx, :], height=300)

# # --- Dashboard Visualizations below ---
# st.subheader("Dashboard Visualizations")

# color_dict = {
#     'Good': 'green',
#     'Satisfactory': 'lightgreen',
#     'Moderate': 'orange',
#     'Poor': 'red',
#     'Very Poor': 'purple',
#     'Severe': 'black'
# }

# # KPIs
# total_cities = df['City'].nunique()
# avg_aqi = df['AQI'].mean()
# worst_city = df.loc[df['AQI'].idxmax()]
# cleanest_city = df.loc[df['AQI'].idxmin()]

# col1, col2, col3 = st.columns(3)
# col1.metric("Total Cities", total_cities)
# col2.metric("Average AQI", f"{avg_aqi:.1f}")
# col3.metric("Most Polluted City", f"{worst_city['City']} ({worst_city['AQI']})")
# st.write(f"**Cleanest City:** {cleanest_city['City']} ({cleanest_city['AQI']})")

# st.subheader("AQI Map of Indian Cities")
# fig_map = px.scatter_mapbox(
#     df, lat="Latitude", lon="Longitude", color="AQI_Category", size='AQI',
#     hover_name="City", hover_data=["State", "AQI"],
#     color_discrete_map=color_dict, mapbox_style="carto-positron", zoom=4, height=500)
# st.plotly_chart(fig_map, use_container_width=True)

# st.subheader("AQI Distribution")
# fig_hist = px.histogram(df, x='AQI', nbins=30, color='AQI_Category', color_discrete_map=color_dict)
# st.plotly_chart(fig_hist, use_container_width=True)

# st.subheader("City Rankings by AQI")
# top10 = df.nlargest(10, 'AQI')
# bot10 = df.nsmallest(10, 'AQI')
# fig_bar = px.bar(top10, x='City', y='AQI', color='AQI_Category', color_discrete_map=color_dict, title='Top 10 Most Polluted Cities')
# st.plotly_chart(fig_bar, use_container_width=True)
# fig_bar2 = px.bar(bot10, x='City', y='AQI', color='AQI_Category', color_discrete_map=color_dict, title='Top 10 Cleanest Cities')
# st.plotly_chart(fig_bar2, use_container_width=True)

# st.subheader("Cities by AQI Category")
# cat_counts = df['AQI_Category'].value_counts()
# fig_pie = px.pie(names=cat_counts.index, values=cat_counts.values, color=cat_counts.index, color_discrete_map=color_dict, hole=0.3)
# st.plotly_chart(fig_pie, use_container_width=True)

# # app.py

# import streamlit as st
# import pandas as pd
# import plotly.express as px

# # Load data once
# @st.cache_data
# def load_data():
#     df = pd.read_csv('india_aqi.csv')
#     def aqi_category(aqi):
#         if aqi <= 50: return 'Good'
#         elif aqi <= 100: return 'Satisfactory'
#         elif aqi <= 200: return 'Moderate'
#         elif aqi <= 300: return 'Poor'
#         elif aqi <= 400: return 'Very Poor'
#         else: return 'Severe'
#     if 'AQI_Category' not in df.columns:
#         df['AQI_Category'] = df['AQI'].apply(aqi_category)
#     return df

# df = load_data()

# st.title("Air Quality Index (AQI) Dashboard - Indian Cities")

# # --- Scrollable Data Table with Pagination ---
# st.subheader("AQI Data Table")
# rows_per_page = 10
# total_rows = len(df)
# pages = (total_rows // rows_per_page) + 1
# page_number = st.number_input("Page Number", min_value=1, max_value=pages, value=1, step=1)
# start_idx = (page_number - 1) * rows_per_page
# end_idx = start_idx + rows_per_page
# st.dataframe(df.iloc[start_idx:end_idx, :], height=300)

# # --- Dashboard Visualizations below ---
# st.subheader("Dashboard Visualizations")

# color_dict = {
#     'Good': 'green',
#     'Satisfactory': 'lightgreen',
#     'Moderate': 'orange',
#     'Poor': 'red',
#     'Very Poor': 'purple',
#     'Severe': 'black'
# }

# # KPIs
# total_cities = df['City'].nunique()
# avg_aqi = df['AQI'].mean()
# worst_city = df.loc[df['AQI'].idxmax()]
# cleanest_city = df.loc[df['AQI'].idxmin()]

# col1, col2, col3 = st.columns(3)
# col1.metric("Total Cities", total_cities)
# col2.metric("Average AQI", f"{avg_aqi:.1f}")
# col3.metric("Most Polluted City", f"{worst_city['City']} ({worst_city['AQI']})")
# st.write(f"**Cleanest City:** {cleanest_city['City']} ({cleanest_city['AQI']})")

# st.subheader("AQI Map of Indian Cities")
# fig_map = px.scatter_mapbox(
#     df, lat="Latitude", lon="Longitude", color="AQI_Category", size='AQI',
#     hover_name="City", hover_data=["State", "AQI"],
#     color_discrete_map=color_dict, mapbox_style="carto-positron", zoom=4, height=500)
# st.plotly_chart(fig_map, use_container_width=True)

# st.subheader("AQI Distribution")
# fig_hist = px.histogram(df, x='AQI', nbins=30, color='AQI_Category', color_discrete_map=color_dict)
# st.plotly_chart(fig_hist, use_container_width=True)

# st.subheader("City Rankings by AQI")
# top10 = df.nlargest(10, 'AQI')
# bot10 = df.nsmallest(10, 'AQI')
# fig_bar = px.bar(top10, x='City', y='AQI', color='AQI_Category', color_discrete_map=color_dict, title='Top 10 Most Polluted Cities')
# st.plotly_chart(fig_bar, use_container_width=True)
# fig_bar2 = px.bar(bot10, x='City', y='AQI', color='AQI_Category', color_discrete_map=color_dict, title='Top 10 Cleanest Cities')
# st.plotly_chart(fig_bar2, use_container_width=True)

# st.subheader("Cities by AQI Category")
# cat_counts = df['AQI_Category'].value_counts()
# fig_pie = px.pie(names=cat_counts.index, values=cat_counts.values, color=cat_counts.index, color_discrete_map=color_dict, hole=0.3)
# st.plotly_chart(fig_pie, use_container_width=True)

